name: Test pycat

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libopenal1 libgl1-mesa-glx

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-test.txt

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v -m unit

    - name: Run integration tests (Linux headless)
      if: runner.os == 'Linux'
      run: |
        PYGLET_HEADLESS=1 xvfb-run -a pytest tests/integration/ -v -m integration

    - name: Run integration tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: |
        pytest tests/integration/ -v -m integration
      env:
        PYGLET_HEADLESS: 1

    - name: Run pyglet compatibility tests
      run: |
        pytest tests/ -v -m pyglet
      env:
        PYGLET_HEADLESS: 1

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libopenal1 libgl1-mesa-glx

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-test.txt

    - name: Run tests with coverage
      run: |
        PYGLET_HEADLESS=1 xvfb-run -a pytest tests/ --cov=pycat --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
